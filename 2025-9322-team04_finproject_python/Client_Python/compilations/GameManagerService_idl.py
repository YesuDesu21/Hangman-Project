# Python stubs generated by omniidl from GameManagerService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "compilations"
#
__name__ = "compilations"
_0_compilations = omniORB.openModule("compilations", r"GameManagerService.idl")
_0_compilations__POA = omniORB.openModule("compilations__POA", r"GameManagerService.idl")


# struct GameSession
_0_compilations.GameSession = omniORB.newEmptyClass()
class GameSession (omniORB.StructBase):
    _NP_RepositoryId = "IDL:compilations/GameSession:1.0"

    def __init__(self, gameId, timeCreated, word, playerUsernames, status, players):
        self.gameId = gameId
        self.timeCreated = timeCreated
        self.word = word
        self.playerUsernames = playerUsernames
        self.status = status
        self.players = players

_0_compilations.GameSession = GameSession
_0_compilations._d_GameSession  = (omniORB.tcInternal.tv_struct, GameSession, GameSession._NP_RepositoryId, "GameSession", "gameId", (omniORB.tcInternal.tv_string,0), "timeCreated", (omniORB.tcInternal.tv_string,0), "word", (omniORB.tcInternal.tv_string,0), "playerUsernames", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0), "status", (omniORB.tcInternal.tv_string,0), "players", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_compilations._tc_GameSession = omniORB.tcInternal.createTypeCode(_0_compilations._d_GameSession)
omniORB.registerType(GameSession._NP_RepositoryId, _0_compilations._d_GameSession, _0_compilations._tc_GameSession)
del GameSession

# typedef ... GameSessionSeq
class GameSessionSeq:
    _NP_RepositoryId = "IDL:compilations/GameSessionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_compilations.GameSessionSeq = GameSessionSeq
_0_compilations._d_GameSessionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:compilations/GameSession:1.0"], 0)
_0_compilations._ad_GameSessionSeq = (omniORB.tcInternal.tv_alias, GameSessionSeq._NP_RepositoryId, "GameSessionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:compilations/GameSession:1.0"], 0))
_0_compilations._tc_GameSessionSeq = omniORB.tcInternal.createTypeCode(_0_compilations._ad_GameSessionSeq)
omniORB.registerType(GameSessionSeq._NP_RepositoryId, _0_compilations._ad_GameSessionSeq, _0_compilations._tc_GameSessionSeq)
del GameSessionSeq

# exception GameNotFoundException
_0_compilations.GameNotFoundException = omniORB.newEmptyClass()
class GameNotFoundException (CORBA.UserException):
    _NP_RepositoryId = "IDL:compilations/GameNotFoundException:1.0"

    def __init__(self, message):
        CORBA.UserException.__init__(self, message)
        self.message = message

_0_compilations.GameNotFoundException = GameNotFoundException
_0_compilations._d_GameNotFoundException  = (omniORB.tcInternal.tv_except, GameNotFoundException, GameNotFoundException._NP_RepositoryId, "GameNotFoundException", "message", (omniORB.tcInternal.tv_string,0))
_0_compilations._tc_GameNotFoundException = omniORB.tcInternal.createTypeCode(_0_compilations._d_GameNotFoundException)
omniORB.registerType(GameNotFoundException._NP_RepositoryId, _0_compilations._d_GameNotFoundException, _0_compilations._tc_GameNotFoundException)
del GameNotFoundException

# struct GameStatus
_0_compilations.GameStatus = omniORB.newEmptyClass()
class GameStatus (omniORB.StructBase):
    _NP_RepositoryId = "IDL:compilations/GameStatus:1.0"

    def __init__(self, gameId, status):
        self.gameId = gameId
        self.status = status

_0_compilations.GameStatus = GameStatus
_0_compilations._d_GameStatus  = (omniORB.tcInternal.tv_struct, GameStatus, GameStatus._NP_RepositoryId, "GameStatus", "gameId", (omniORB.tcInternal.tv_string,0), "status", (omniORB.tcInternal.tv_string,0))
_0_compilations._tc_GameStatus = omniORB.tcInternal.createTypeCode(_0_compilations._d_GameStatus)
omniORB.registerType(GameStatus._NP_RepositoryId, _0_compilations._d_GameStatus, _0_compilations._tc_GameStatus)
del GameStatus

# typedef ... GameStatusMap
class GameStatusMap:
    _NP_RepositoryId = "IDL:compilations/GameStatusMap:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_compilations.GameStatusMap = GameStatusMap
_0_compilations._d_GameStatusMap  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:compilations/GameStatus:1.0"], 0)
_0_compilations._ad_GameStatusMap = (omniORB.tcInternal.tv_alias, GameStatusMap._NP_RepositoryId, "GameStatusMap", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:compilations/GameStatus:1.0"], 0))
_0_compilations._tc_GameStatusMap = omniORB.tcInternal.createTypeCode(_0_compilations._ad_GameStatusMap)
omniORB.registerType(GameStatusMap._NP_RepositoryId, _0_compilations._ad_GameStatusMap, _0_compilations._tc_GameStatusMap)
del GameStatusMap

# interface GameManagerService
_0_compilations._d_GameManagerService = (omniORB.tcInternal.tv_objref, "IDL:compilations/GameManagerService:1.0", "GameManagerService")
omniORB.typeMapping["IDL:compilations/GameManagerService:1.0"] = _0_compilations._d_GameManagerService
_0_compilations.GameManagerService = omniORB.newEmptyClass()
class GameManagerService :
    _NP_RepositoryId = _0_compilations._d_GameManagerService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_compilations.GameManagerService = GameManagerService
_0_compilations._tc_GameManagerService = omniORB.tcInternal.createTypeCode(_0_compilations._d_GameManagerService)
omniORB.registerType(GameManagerService._NP_RepositoryId, _0_compilations._d_GameManagerService, _0_compilations._tc_GameManagerService)

# GameManagerService operations and attributes
GameManagerService._d_joinOrCreateGameSession = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)
GameManagerService._d_listActiveGameSessions = ((), (omniORB.typeMapping["IDL:compilations/GameSessionSeq:1.0"], ), None)
GameManagerService._d_getGameStatus = ((), (omniORB.typeMapping["IDL:compilations/GameStatusMap:1.0"], ), {_0_compilations.GameNotFoundException._NP_RepositoryId: _0_compilations._d_GameNotFoundException})

# GameManagerService object reference
class _objref_GameManagerService (CORBA.Object):
    _NP_RepositoryId = GameManagerService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def joinOrCreateGameSession(self, *args):
        return self._obj.invoke("joinOrCreateGameSession", _0_compilations.GameManagerService._d_joinOrCreateGameSession, args)

    def listActiveGameSessions(self, *args):
        return self._obj.invoke("listActiveGameSessions", _0_compilations.GameManagerService._d_listActiveGameSessions, args)

    def getGameStatus(self, *args):
        return self._obj.invoke("getGameStatus", _0_compilations.GameManagerService._d_getGameStatus, args)

omniORB.registerObjref(GameManagerService._NP_RepositoryId, _objref_GameManagerService)
_0_compilations._objref_GameManagerService = _objref_GameManagerService
del GameManagerService, _objref_GameManagerService

# GameManagerService skeleton
__name__ = "compilations__POA"
class GameManagerService (PortableServer.Servant):
    _NP_RepositoryId = _0_compilations.GameManagerService._NP_RepositoryId


    _omni_op_d = {"joinOrCreateGameSession": _0_compilations.GameManagerService._d_joinOrCreateGameSession, "listActiveGameSessions": _0_compilations.GameManagerService._d_listActiveGameSessions, "getGameStatus": _0_compilations.GameManagerService._d_getGameStatus}

GameManagerService._omni_skeleton = GameManagerService
_0_compilations__POA.GameManagerService = GameManagerService
omniORB.registerSkeleton(GameManagerService._NP_RepositoryId, GameManagerService)
del GameManagerService
__name__ = "compilations"

#
# End of module "compilations"
#
__name__ = "GameManagerService_idl"

_exported_modules = ( "compilations", )

# The end.
