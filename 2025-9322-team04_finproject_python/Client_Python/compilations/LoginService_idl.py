# Python stubs generated by omniidl from LoginService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "compilations"
#
__name__ = "compilations"
_0_compilations = omniORB.openModule("compilations", r"LoginService.idl")
_0_compilations__POA = omniORB.openModule("compilations__POA", r"LoginService.idl")


# exception InvalidCredentialsException
_0_compilations.InvalidCredentialsException = omniORB.newEmptyClass()
class InvalidCredentialsException (CORBA.UserException):
    _NP_RepositoryId = "IDL:compilations/InvalidCredentialsException:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_compilations.InvalidCredentialsException = InvalidCredentialsException
_0_compilations._d_InvalidCredentialsException  = (omniORB.tcInternal.tv_except, InvalidCredentialsException, InvalidCredentialsException._NP_RepositoryId, "InvalidCredentialsException")
_0_compilations._tc_InvalidCredentialsException = omniORB.tcInternal.createTypeCode(_0_compilations._d_InvalidCredentialsException)
omniORB.registerType(InvalidCredentialsException._NP_RepositoryId, _0_compilations._d_InvalidCredentialsException, _0_compilations._tc_InvalidCredentialsException)
del InvalidCredentialsException

# exception UserAlreadyLoggedInException
_0_compilations.UserAlreadyLoggedInException = omniORB.newEmptyClass()
class UserAlreadyLoggedInException (CORBA.UserException):
    _NP_RepositoryId = "IDL:compilations/UserAlreadyLoggedInException:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_compilations.UserAlreadyLoggedInException = UserAlreadyLoggedInException
_0_compilations._d_UserAlreadyLoggedInException  = (omniORB.tcInternal.tv_except, UserAlreadyLoggedInException, UserAlreadyLoggedInException._NP_RepositoryId, "UserAlreadyLoggedInException")
_0_compilations._tc_UserAlreadyLoggedInException = omniORB.tcInternal.createTypeCode(_0_compilations._d_UserAlreadyLoggedInException)
omniORB.registerType(UserAlreadyLoggedInException._NP_RepositoryId, _0_compilations._d_UserAlreadyLoggedInException, _0_compilations._tc_UserAlreadyLoggedInException)
del UserAlreadyLoggedInException

# struct LoginResult
_0_compilations.LoginResult = omniORB.newEmptyClass()
class LoginResult (omniORB.StructBase):
    _NP_RepositoryId = "IDL:compilations/LoginResult:1.0"

    def __init__(self, success, forcedLogout, sessionId):
        self.success = success
        self.forcedLogout = forcedLogout
        self.sessionId = sessionId

_0_compilations.LoginResult = LoginResult
_0_compilations._d_LoginResult  = (omniORB.tcInternal.tv_struct, LoginResult, LoginResult._NP_RepositoryId, "LoginResult", "success", omniORB.tcInternal.tv_boolean, "forcedLogout", omniORB.tcInternal.tv_boolean, "sessionId", (omniORB.tcInternal.tv_string,0))
_0_compilations._tc_LoginResult = omniORB.tcInternal.createTypeCode(_0_compilations._d_LoginResult)
omniORB.registerType(LoginResult._NP_RepositoryId, _0_compilations._d_LoginResult, _0_compilations._tc_LoginResult)
del LoginResult

# interface LoginService
_0_compilations._d_LoginService = (omniORB.tcInternal.tv_objref, "IDL:compilations/LoginService:1.0", "LoginService")
omniORB.typeMapping["IDL:compilations/LoginService:1.0"] = _0_compilations._d_LoginService
_0_compilations.LoginService = omniORB.newEmptyClass()
class LoginService :
    _NP_RepositoryId = _0_compilations._d_LoginService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_compilations.LoginService = LoginService
_0_compilations._tc_LoginService = omniORB.tcInternal.createTypeCode(_0_compilations._d_LoginService)
omniORB.registerType(LoginService._NP_RepositoryId, _0_compilations._d_LoginService, _0_compilations._tc_LoginService)

# LoginService operations and attributes
LoginService._d_loginPlayer = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:compilations/LoginResult:1.0"], ), {_0_compilations.InvalidCredentialsException._NP_RepositoryId: _0_compilations._d_InvalidCredentialsException, _0_compilations.UserAlreadyLoggedInException._NP_RepositoryId: _0_compilations._d_UserAlreadyLoggedInException})
LoginService._d_loginAdmin = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:compilations/LoginResult:1.0"], ), {_0_compilations.InvalidCredentialsException._NP_RepositoryId: _0_compilations._d_InvalidCredentialsException, _0_compilations.UserAlreadyLoggedInException._NP_RepositoryId: _0_compilations._d_UserAlreadyLoggedInException})
LoginService._d_forceLoginPlayer = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:compilations/LoginResult:1.0"], ), {_0_compilations.InvalidCredentialsException._NP_RepositoryId: _0_compilations._d_InvalidCredentialsException})
LoginService._d_logoutPlayer = (((omniORB.tcInternal.tv_string,0), ), (), None)
LoginService._d_isSessionActive = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), None)

# LoginService object reference
class _objref_LoginService (CORBA.Object):
    _NP_RepositoryId = LoginService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def loginPlayer(self, *args):
        return self._obj.invoke("loginPlayer", _0_compilations.LoginService._d_loginPlayer, args)

    def loginAdmin(self, *args):
        return self._obj.invoke("loginAdmin", _0_compilations.LoginService._d_loginAdmin, args)

    def forceLoginPlayer(self, *args):
        return self._obj.invoke("forceLoginPlayer", _0_compilations.LoginService._d_forceLoginPlayer, args)

    def logoutPlayer(self, *args):
        return self._obj.invoke("logoutPlayer", _0_compilations.LoginService._d_logoutPlayer, args)

    def isSessionActive(self, *args):
        return self._obj.invoke("isSessionActive", _0_compilations.LoginService._d_isSessionActive, args)

omniORB.registerObjref(LoginService._NP_RepositoryId, _objref_LoginService)
_0_compilations._objref_LoginService = _objref_LoginService
del LoginService, _objref_LoginService

# LoginService skeleton
__name__ = "compilations__POA"
class LoginService (PortableServer.Servant):
    _NP_RepositoryId = _0_compilations.LoginService._NP_RepositoryId


    _omni_op_d = {"loginPlayer": _0_compilations.LoginService._d_loginPlayer, "loginAdmin": _0_compilations.LoginService._d_loginAdmin, "forceLoginPlayer": _0_compilations.LoginService._d_forceLoginPlayer, "logoutPlayer": _0_compilations.LoginService._d_logoutPlayer, "isSessionActive": _0_compilations.LoginService._d_isSessionActive}

LoginService._omni_skeleton = LoginService
_0_compilations__POA.LoginService = LoginService
omniORB.registerSkeleton(LoginService._NP_RepositoryId, LoginService)
del LoginService
__name__ = "compilations"

#
# End of module "compilations"
#
__name__ = "LoginService_idl"

_exported_modules = ( "compilations", )

# The end.
