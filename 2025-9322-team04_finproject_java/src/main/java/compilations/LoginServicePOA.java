package compilations;


/**
* compilations/LoginServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LoginService.idl
* Saturday, May 24, 2025 4:10:23 PM PST
*/

public abstract class LoginServicePOA extends org.omg.PortableServer.Servant
 implements LoginServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("loginPlayer", new Integer (0));
    _methods.put ("loginAdmin", new Integer (1));
    _methods.put ("forceLoginPlayer", new Integer (2));
    _methods.put ("logoutPlayer", new Integer (3));
    _methods.put ("isSessionActive", new Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // compilations/LoginService/loginPlayer
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           LoginResult $result = null;
           $result = this.loginPlayer (username, password);
           out = $rh.createReply();
           LoginResultHelper.write (out, $result);
         } catch (InvalidCredentialsException $ex) {
           out = $rh.createExceptionReply ();
           InvalidCredentialsExceptionHelper.write (out, $ex);
         } catch (UserAlreadyLoggedInException $ex) {
           out = $rh.createExceptionReply ();
           UserAlreadyLoggedInExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // compilations/LoginService/loginAdmin
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           LoginResult $result = null;
           $result = this.loginAdmin (username, password);
           out = $rh.createReply();
           LoginResultHelper.write (out, $result);
         } catch (InvalidCredentialsException $ex) {
           out = $rh.createExceptionReply ();
           InvalidCredentialsExceptionHelper.write (out, $ex);
         } catch (UserAlreadyLoggedInException $ex) {
           out = $rh.createExceptionReply ();
           UserAlreadyLoggedInExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // compilations/LoginService/forceLoginPlayer
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           String table = in.read_string ();
           LoginResult $result = null;
           $result = this.forceLoginPlayer (username, password, table);
           out = $rh.createReply();
           LoginResultHelper.write (out, $result);
         } catch (InvalidCredentialsException $ex) {
           out = $rh.createExceptionReply ();
           InvalidCredentialsExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // compilations/LoginService/logoutPlayer
       {
         String sessionId = in.read_string ();
         this.logoutPlayer (sessionId);
         out = $rh.createReply();
         break;
       }

       case 4:  // compilations/LoginService/isSessionActive
       {
         String sessionId = in.read_string ();
         boolean $result = false;
         $result = this.isSessionActive (sessionId);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:compilations/LoginService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LoginService _this() 
  {
    return LoginServiceHelper.narrow(
    super._this_object());
  }

  public LoginService _this(org.omg.CORBA.ORB orb) 
  {
    return LoginServiceHelper.narrow(
    super._this_object(orb));
  }


} // class LoginServicePOA
